---
description: Use Abstract and Abstract Global Wallet for any web3 development
alwaysApply: true
---

# Abstract

AGW Reusables is a collection of components and utilities for building web3 applications with Abstract Global Wallet (AGW) on Abstract.

It is built on top of the shadcn/ui package which uses tailwind for styling.

It is powered by the shdacn registry, meaning you can install components and utilities from the registry as described in @shadcn.mdc.

## Installation

The user should have installed and configured the agw-provider wrapper component as described in the instructions below:

Follow the steps below to start using AGW Reusables.

1. Setup your project

Create a new project or configure an existing one using the shadcn init command:

```bash
pnpm dlx shadcn@latest init
```
2. Install the AGW Provider
Install the required wrapper component, the AGW Provider:

pnpm dlx shadcn@latest add "https://build.abs.xyz/r/agw-provider.json"

3. Wrap your application

Wrap your application in the installed component inside app/layout.tsx.

```tsx title="app/layout.tsx"
import { NextAbstractWalletProvider } from "@/components/agw-provider";
import { Toaster } from "@/components/ui/sonner";
import "./globals.css";
 
export default function RootLayout({ children }: { children: React.ReactNode }) {
  return (
    <html lang="en">
      <NextAbstractWalletProvider>
        <body>
          {children}
          <Toaster />
        </body>
      </NextAbstractWalletProvider>
    </html>
  );
}
```


## Using Components

Import components from the ui directory using the configured aliases:

```tsx
"use client"

import { ConnectWalletButton } from "@/components/connect-wallet-button"

export default function ConnectWalletButtonDemo() {
  return (
    <div className="flex justify-center">
      <ConnectWalletButton />
    </div>
  )
}
```

## Installing Additional Components

There are several available components, hooks, config, services, and utilities that can be installed from the registry.

To install additional components, use the Shadcn CLI:

```bash
pnpm dlx shadcn@latest add "https://build.abs.xyz/r/connect-wallet-button.json"
```

Some commonly used components are:

- connect-wallet-button
- siwe-button
- onboarding-dialog
- session-keys
- abstract-profile
- abstract-app-voting
- nft-card
- abstract-contracts
- cursor-ai-config
- claude-config
- use-optimistic-write-contract

## Component Styling

This project uses the "new-york" style variant with the "neutral" base color and CSS variables for theming, as configured in `components.json`.